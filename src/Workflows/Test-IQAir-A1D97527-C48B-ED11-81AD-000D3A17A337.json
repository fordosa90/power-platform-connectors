{
  "properties": {
    "connectionReferences": {
      "shared_iqairip": {
        "runtimeSource": "embedded",
        "connection": {},
        "api": {
          "name": "shared_iqairip"
        }
      },
      "shared_office365_1": {
        "runtimeSource": "embedded",
        "connection": {},
        "api": {
          "name": "shared_office365"
        }
      }
    },
    "definition": {
      "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "$connections": {
          "defaultValue": {},
          "type": "Object"
        },
        "$authentication": {
          "defaultValue": {},
          "type": "SecureObject"
        }
      },
      "triggers": {
        "Recurrence": {
          "recurrence": {
            "frequency": "Day",
            "interval": 1,
            "startTime": "2023-01-02T23:00:00Z"
          },
          "metadata": {
            "operationMetadataId": "b1d6086f-6850-48a2-bfe0-888f44ca426c"
          },
          "type": "Recurrence"
        }
      },
      "actions": {
        "Scope_-_Try": {
          "actions": {
            "List_countries": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "752894e1-cf70-4d0d-93a8-cb3b93b95146"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_iqairip",
                  "operationId": "ListCountries",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_iqairip"
                },
                "parameters": {},
                "authentication": "@parameters('$authentication')"
              }
            },
            "List_states": {
              "runAfter": {
                "List_countries": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "f3bd2c07-767c-48b5-afa9-918b98e199c7"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_iqairip",
                  "operationId": "ListStates",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_iqairip"
                },
                "parameters": {
                  "country": "France"
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "List_cities": {
              "runAfter": {
                "List_states": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "3cd5165a-251c-4f2d-8f5e-5e846ce7c2af"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_iqairip",
                  "operationId": "ListCities",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_iqairip"
                },
                "parameters": {
                  "state": "Brittany",
                  "country": "France"
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Get_data_by_city": {
              "runAfter": {
                "List_cities": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "e472d625-a9a4-4905-b6f1-9d76cd627315"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_iqairip",
                  "operationId": "GetDataByCity",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_iqairip"
                },
                "parameters": {
                  "city": "Lorient",
                  "state": "Brittany",
                  "country": "France"
                },
                "authentication": "@parameters('$authentication')"
              }
            },
            "Get_data_by_coordinates": {
              "runAfter": {
                "Get_data_by_city": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "operationMetadataId": "64400970-a613-4a85-a4de-6e0c60f1afba"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_iqairip",
                  "operationId": "GetDataByCoordinates",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_iqairip"
                },
                "parameters": {
                  "lat": "47.4979",
                  "lon": "19.0402"
                },
                "authentication": "@parameters('$authentication')"
              }
            }
          },
          "runAfter": {},
          "metadata": {
            "operationMetadataId": "ad5a6821-2fd3-4828-8579-34790b7915a5"
          },
          "type": "Scope"
        },
        "Scope_-_Catch": {
          "actions": {
            "Send_an_email_(V2)": {
              "runAfter": {},
              "metadata": {
                "operationMetadataId": "8cc917c2-4be7-4f52-aea9-ebccc0a1c319"
              },
              "type": "OpenApiConnection",
              "inputs": {
                "host": {
                  "connectionName": "shared_office365_1",
                  "operationId": "SendEmailV2",
                  "apiId": "/providers/Microsoft.PowerApps/apis/shared_office365"
                },
                "parameters": {
                  "emailMessage/To": "test",
                  "emailMessage/Subject": "[Independent Connector] Issue with a custom connector",
                  "emailMessage/Body": "<p>Hey,<br>\n<br>\nThe scheduled daily test has been either failed or skipped.<br>\nPlease check the flow run history for more details.<br>\n<br>\n- &nbsp;Flow: @{workflow()['tags']['flowDisplayName']}<br>\n&nbsp;- Workflow: @{workflow().name}<br>\n&nbsp;- Time: @{utcNow('yyyy-MM-dd HH:mm:ss')}<br>\n&nbsp;- &lt;a href=https://flow.microsoft.com/manage/environments/@{workflow()['tags']['environmentName']}/flows/@{workflow()['name']}/details&gt;Open flow @{workflow()['tags']['flowDisplayName']}&lt;/a&gt;<br>\n<br>\nCheers,</p>"
                },
                "authentication": "@parameters('$authentication')"
              }
            }
          },
          "runAfter": {
            "Scope_-_Try": [
              "Failed",
              "Skipped",
              "TimedOut"
            ]
          },
          "metadata": {
            "operationMetadataId": "f5a52bab-1e5d-428c-8db4-e4d385f1bf10"
          },
          "type": "Scope"
        }
      }
    },
    "templateName": ""
  },
  "schemaVersion": "1.0.0.0"
}